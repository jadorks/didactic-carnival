import React, { FC } from "react";
import styles from "./button.module.css";

type Props = {
  children: React.ReactNode;
  onClick?: React.MouseEventHandler<HTMLButtonElement>;
  className?: string;
  buttonType?: "primary" | "secondary";
  buttonAs?: "a" | "button";
  buttonFormat?: "default" | "alt";
  href?: string;
  target?: string;
  rel?: string;
  width?: string;
  disabled?: boolean;
};

const AltButtonSVG: FC<{ type: "primary" | "secondary" }> = ({
  children,
  type = "primary",
}) => {
  return (
    <svg
      className={`${styles.button__bg}`}
      data-type={type}
      width="100%"
      height="100%"
      viewBox="0 0 177 57"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g transform="translate(0,-9.2)">
        <mask id="path-1-inside-1_30_12" fill="white">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M17 56.6658L177 56.6658L177 9.66577L42.6864 9.66578L17 30.8289L17 56.6658Z"
          />
        </mask>

        {/* center */}
        <path
          // className={styles.button__center}
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M17 56.6658L177 56.6658L177 9.66577L42.6864 9.66578L17 30.8289L17 56.6658Z"
          fill="#3A0503"
        />
        {/* endcenter */}

        {/* border */}
        <path
          className={styles.button__border}
          d="M177 56.6658L177 57.6658L178 57.6658L178 56.6658L177 56.6658ZM17 56.6658L16 56.6658L16 57.6658L17 57.6658L17 56.6658ZM177 9.66577L178 9.66577L178 8.66577L177 8.66577L177 9.66577ZM42.6864 9.66578L42.6864 8.66578L42.3276 8.66578L42.0506 8.89399L42.6864 9.66578ZM17 30.8289L16.3641 30.0571L16 30.3571L16 30.8289L17 30.8289ZM177 55.6658L17 55.6658L17 57.6658L177 57.6658L177 55.6658ZM176 9.66577L176 56.6658L178 56.6658L178 9.66577L176 9.66577ZM42.6864 10.6658L177 10.6658L177 8.66577L42.6864 8.66578L42.6864 10.6658ZM42.0506 8.89399L16.3641 30.0571L17.6359 31.6007L43.3223 10.4376L42.0506 8.89399ZM18 56.6658L18 30.8289L16 30.8289L16 56.6658L18 56.6658Z"
          fill="#CE9C28"
          mask="url(#path-1-inside-1_30_12)"
        />
        {/* endborder */}

        {/* top-corner */}
        <path
          d="M11.7387 26.5803L11.7386 9.6717L32.2614 9.67168L11.7387 26.5803Z"
          fill="#3A0503"
          stroke="#D9AC43"
        />
        {/* end top-corner */}

        <text x="55%" y="60%" className={styles.button__text}>
          {" "}
          {children}
        </text>
      </g>
    </svg>
  );
};

const ButtonSVG: FC<{ type: "primary" | "secondary" }> = ({
  children,
  type = "primary",
}) => {
  return (
    // <svg
    //   className={`${styles.button__bg}`}
    //   data-type={type}
    //   width="100%"
    //   height="100%"
    //   viewBox="0 0 177 57"
    //   fill="none"
    //   xmlns="http://www.w3.org/2000/svg"
    // >
    //   <mask id="path-1-inside-1_56_56" fill="white">
    //     <path
    //       fill-rule="evenodd"
    //       clip-rule="evenodd"
    //       d="M160 0H0V47H134.314L160 25.8369V0Z"
    //     />
    //   </mask>

    //   {/* center */}
    //   <path
    //     // className={styles.button__center}
    //     fill-rule="evenodd"
    //     clip-rule="evenodd"
    //     d="M160 0H0V47H134.314L160 25.8369V0Z"
    //     fill="#3A0503"
    //   />

    //   {/* endcenter */}

    //   {/* border */}
    //   <path
    //     className={styles.button__border}
    //     d="M0 0V-1H-1V0H0ZM160 0H161V-1H160V0ZM0 47H-1V48H0V47ZM134.314 47V48H134.672L134.949 47.7718L134.314 47ZM160 25.8369L160.636 26.6087L161 26.3087V25.8369H160ZM0 1H160V-1H0V1ZM1 47V0H-1V47H1ZM134.314 46H0V48H134.314V46ZM134.949 47.7718L160.636 26.6087L159.364 25.0651L133.678 46.2282L134.949 47.7718ZM159 0V25.8369H161V0H159Z"
    //     fill="#CE9C28"
    //     mask="url(#path-1-inside-1_56_56)"
    //   />

    //   {/* endborder */}

    //   {/* bottom-corner */}
    //   <path
    //     d="M164.84 30.0855L164.84 46.9941L144.318 46.9941L164.84 30.0855Z"
    //     fill="#3A0503"
    //     stroke="#D9AC43"
    //   />

    //   {/* end bottom-corner */}

    //   <text x="45%" y="45%" className={styles.button__text}>
    //     {" "}
    //     {children}
    //   </text>
    // </svg>

    <svg
    className={`${styles.button__bg}`}
      width="100%"
      height="100%"
      viewBox="0 0 131 45"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.72133 32.6416L1.72137 32.6478C1.73098 34.3169 2.36525 35.922 3.49928 37.1467C4.63334 38.3715 6.1849 39.1271 7.84828 39.2648L51.4064 42.9168C56.0396 43.3051 60.7503 43.5035 65.3927 43.5035C70.0436 43.5035 74.7543 43.3051 79.3875 42.9168L122.946 39.2648C124.609 39.1271 126.161 38.3715 127.295 37.1467C128.429 35.922 129.063 34.3169 129.073 32.6478V32.6416L129.073 12.8809L129.073 12.8749C129.063 11.2051 128.429 9.59936 127.296 8.37328C126.162 7.14721 124.611 6.38944 122.947 6.24925L122.947 6.24921L79.3875 2.59712L79.3048 3.58343L79.3875 2.59712C74.7542 2.20886 70.035 2.01047 65.3927 2.01047C60.7503 2.01047 56.0396 2.20886 51.4064 2.59712L51.4064 2.59712L7.84721 6.24921L7.84678 6.24925C6.18282 6.38944 4.63159 7.14721 3.4981 8.37328C2.36458 9.59936 1.73077 11.2051 1.72137 12.8749H1.72135V12.8809L1.72133 32.6416Z"
        fill="#38137F"
        stroke="#F762DA"
        stroke-width="2.14324"
      />
      {/* <path
        d="M47.08 19.693C45.928 19.693 45.048 20.093 44.424 20.877C43.8 21.661 43.48 22.701 43.48 23.965C43.48 25.053 43.752 25.981 44.296 26.749C44.824 27.533 45.624 27.917 46.664 27.917C47.208 27.917 47.64 27.821 47.96 27.629C48.312 27.421 48.68 27.037 48.76 27.037C48.952 27.037 49.08 27.949 50.008 27.949C50.952 27.949 51.432 27.517 51.432 26.637C51.432 26.397 51.4 26.029 51.32 25.501C51.24 24.973 51.208 24.461 51.208 23.949C51.208 23.357 51.224 22.413 51.272 21.133C51.32 19.869 51.336 19.053 51.336 18.685C51.336 17.373 50.872 16.717 49.944 16.717C49.128 16.717 48.68 17.197 48.68 17.981C48.68 18.317 48.856 19.469 48.856 19.821V20.013C48.392 19.805 47.8 19.693 47.08 19.693ZM47.304 25.789C46.36 25.789 45.896 25.133 45.896 23.821C45.896 22.589 46.472 21.693 47.64 21.693C48.088 21.693 48.52 21.821 48.92 22.093C48.968 22.397 49 22.781 49 23.229C49 24.941 48.44 25.789 47.304 25.789ZM56.7219 19.549C53.8899 19.549 52.3699 21.245 52.3699 24.333C52.3699 25.309 52.6259 26.141 53.1219 26.845C53.6179 27.549 54.3379 27.901 55.2659 27.901C56.3859 27.901 57.1059 26.989 57.2019 26.989C57.5699 26.989 57.5859 27.901 58.6259 27.901C59.2819 27.901 59.8259 27.533 59.8259 26.893C59.8259 26.845 59.7939 26.493 59.7459 25.805C59.6819 25.133 59.6499 24.365 59.6499 23.501C59.6499 23.325 59.6659 23.053 59.6979 22.669C59.7139 22.285 59.7299 22.013 59.7299 21.837C59.7299 20.317 58.7219 19.549 56.7219 19.549ZM54.6419 24.157C54.6419 23.469 54.7859 22.861 55.0579 22.349C55.3299 21.837 55.7619 21.581 56.3859 21.581C56.9459 21.581 57.2499 21.693 57.3939 22.045C57.5219 22.397 57.5379 22.621 57.5379 23.213C57.5379 23.837 57.4099 24.413 57.1539 24.957C56.8819 25.501 56.4819 25.773 55.9219 25.773C55.0419 25.773 54.6419 25.053 54.6419 24.157ZM62.3769 19.693C61.4329 19.693 60.9529 20.205 60.9529 21.229C60.9529 21.405 61.0009 21.853 61.0809 22.557C61.1609 23.277 61.1929 24.077 61.1929 24.973C61.1929 25.917 61.1769 26.797 61.1289 27.613C61.0809 28.429 61.0489 28.941 61.0489 29.181C61.0489 30.205 61.4969 30.717 62.4089 30.717C63.1609 30.717 63.5289 30.205 63.5289 29.181C63.5289 28.957 63.5129 28.621 63.4809 28.189C63.4329 27.741 63.4169 27.405 63.4169 27.181C63.8169 27.629 64.4569 27.853 65.3529 27.853C66.4889 27.853 67.3689 27.437 67.9929 26.621C68.6009 25.805 68.9049 24.797 68.9049 23.597C68.9049 21.293 67.8649 19.709 65.5769 19.709C64.7929 19.709 63.9609 20.093 63.5769 20.749C63.3689 20.045 62.9689 19.693 62.3769 19.693ZM64.9529 25.709C64.1049 25.709 63.3849 25.021 63.3849 23.949C63.3849 22.749 63.9609 21.821 65.0969 21.821C66.1209 21.821 66.6009 22.509 66.6009 23.549C66.6009 24.749 66.0569 25.709 64.9529 25.709ZM71.0904 19.645C70.2744 19.645 69.7624 20.061 69.7624 20.893C69.7624 21.117 69.8264 21.661 69.9384 22.525C70.0504 23.405 70.0984 24.269 70.0984 25.149C70.0984 25.613 70.0664 26.333 69.9864 27.277C69.9064 28.221 69.8584 28.861 69.8584 29.181C69.8584 30.221 70.3064 30.749 71.2024 30.749C72.1464 30.749 72.4024 30.205 72.4024 29.245C72.4024 29.085 72.3864 28.813 72.3384 28.429C72.2904 28.045 72.2584 27.773 72.2584 27.629C72.2584 27.549 72.2744 27.421 72.2904 27.245C72.8504 27.613 73.5224 27.805 74.2744 27.805C75.3144 27.805 76.1624 27.373 76.7864 26.509C77.4104 25.661 77.7144 24.653 77.7144 23.501C77.7144 22.461 77.4264 21.565 76.8664 20.813C76.2904 20.061 75.4904 19.693 74.4664 19.693C72.9304 19.693 72.6904 20.557 72.3544 20.557C72.2744 20.557 72.0504 19.645 71.0904 19.645ZM73.6504 25.645C72.7384 25.645 72.2904 25.021 72.2904 23.789C72.2904 22.493 72.7864 21.837 73.7944 21.837C74.7544 21.837 75.4104 22.605 75.4104 23.565C75.4104 24.765 74.8024 25.645 73.6504 25.645ZM81.8385 19.533C80.9105 19.533 80.1425 19.741 79.5185 20.157C78.8945 20.573 78.5745 21.213 78.5745 22.077C78.5745 23.469 79.5505 24.269 80.9745 24.541C81.1025 24.557 81.7745 24.637 82.1105 24.701C82.4465 24.781 82.8305 25.005 82.8305 25.341C82.8305 25.805 82.4785 26.045 81.7745 26.045C81.1505 26.045 80.6065 25.773 80.3505 25.501C80.0785 25.229 79.7425 24.957 79.4225 24.957C78.7665 24.957 78.4305 25.341 78.4305 26.109C78.4305 27.501 80.3025 27.997 81.4705 27.997C83.6305 28.045 85.0385 27.181 85.0385 25.181C85.0385 23.885 84.1905 23.133 82.4945 22.925C81.2785 22.765 80.6705 22.493 80.6705 22.093C80.6705 21.709 80.9265 21.517 81.4545 21.517C81.7745 21.517 82.1585 21.629 82.6225 21.869C83.0865 22.109 83.4225 22.221 83.6305 22.221C84.2225 22.221 84.6385 21.741 84.6385 21.101C84.6385 20.717 84.4785 20.397 84.1585 20.141C83.5025 19.645 82.7185 19.533 81.8385 19.533Z"
        fill="white"
      /> */}
      <text x="50%" y="56%" className={styles.button__text}>
        {children}
      </text>
    </svg>
  );
};

const Button: FC<Props> = ({
  children,
  onClick,
  className = "",
  buttonType,
  buttonAs,
  buttonFormat = "default",
  ...props
}) => {
  return (
    <>
      {
        {
          button: (
            <button
              className={`${styles.button} ${className}`}
              onClick={onClick}
              {...props}
            >
              {buttonFormat === "alt" ? (
                <AltButtonSVG type={buttonType}>{children}</AltButtonSVG>
              ) : (
                <ButtonSVG type={buttonType}>{children}</ButtonSVG>
              )}
            </button>
          ),
          a: (
            <a {...props}>
              <p className={`${styles.button} ${className}`}>
                {buttonFormat === "alt" ? (
                  <AltButtonSVG type={buttonType}>{children}</AltButtonSVG>
                ) : (
                  <ButtonSVG type={buttonType}>{children}</ButtonSVG>
                )}
              </p>
            </a>
          ),
        }[props.disabled ? "button" : buttonAs || "button"]
      }
    </>
  );
};

export default Button;
